#!/bin/bash

function main() {
  cd $(dirname $0)
  [ -f settings ] && . settings || { err "file settings not found"; return 2; }
  local fatal=0
  [[ $CLOUD_PROVIDER ]] || { err "Missing setting CLOUD_PROVIDER"; fatal=1; }
  [[ $CLUSTER_NAME ]] || { err "Missing setting CLUSTER_NAME"; fatal=1; }
  [[ $DNS_DOMAIN ]] || { err "Missing setting DNS_DOMAIN"; fatal=1; }
  [[ $PARENT_NAMESPACE ]] || { err "Missing setting PARENT_NAMESPACE"; fatal=1; }
  [[ $APOCTL_API ]] || { err "Missing setting APOCTL_API"; fatal=1; }

  [[ "$CLOUD_PROVIDER" == "AWS" ]] && { _aws; return $?; }
  err "CLOUD_PROVIDER $CLOUD_PROVIDER is not known"
  return 2
}

_aws() {
  local fatal=0
  [[ $AWS_KUBE_REGION ]] || { err "Missing setting AWS_KUBE_REGION"; fatal=1; }
  [[ $AWS_KUBE_ZONE ]] || { err "Missing setting AWS_KUBE_ZONE"; fatal=1; }
  [[ $AWS_KUBE_VERSION ]] || { err "Missing setting AWS_KUBE_VERSION"; fatal=1; }
  [[ $AWS_KUBE_MASTER_SIZE ]] || { err "Missing setting AWS_KUBE_MASTER_SIZE"; fatal=1; }
  [[ $AWS_KUBE_NODE_SIZE ]] || { err "Missing setting AWS_KUBE_NODE_SIZE"; fatal=1; }
  [[ $AWS_KUBE_IMAGE ]] || { err "Missing setting AWS_KUBE_IMAGE"; fatal=1; }
  [[ $AWS_KUBE_NODE_COUNT ]] || { err "Missing setting AWS_KUBE_NODE_COUNT"; fatal=1; }
  [[ $AWS_KUBE_CNI ]] || { err "Missing setting AWS_KUBE_CNI"; fatal=1; }
  [[ $AWS_ACCOUNT ]] || { err "Missing setting AWS_ACCOUNT"; fatal=1; }
  [[ $AWS_DOMAIN_ID ]] || { err "Missing setting AWS_DOMAIN_ID"; fatal=1; }
  [ $fatal -eq 1 ] && return 2
  return 0
}

err() { echo "$@" 1>&2; }

main $@
