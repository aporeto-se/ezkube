#!/bin/bash

function main() {
  cd $(dirname $0)
  [ -f settings ] && . settings || { err "file settings not found"; return 2; }
  local fatal=0
  ./check-system || { fatal=1; }
  ./check-config || { fatal=1; }
  [ $fatal -eq 1 ] && { err "Unable to continue. See above."; return 2; }

  [[ "$CLOUD_PROVIDER" == "AWS" ]] || { err "Cloud provider must be AWS"; return 2; }

  local fqdn=${CLUSTER_NAME}.${DNS_DOMAIN}

  err "Attempting to get IP from AWS API"
  local ip=$(_getip)
  [[ $ip ]] || { err "IP not found"; return 3; }
  err "Retrieved ip $ip"

  err "Attempting to update record A record api.$fqdn with IP $ip"
  _setip $fqdn $ip || { err "Failed to update record"; return 4; }
  err "Completed successfully"
}

_getip() {
  local values=master-${AWS_KUBE_REGION}${AWS_KUBE_ZONE}.masters.${CLUSTER_NAME}.${DNS_DOMAIN}
  echo $(
    aws ec2 --region $AWS_KUBE_REGION describe-instances --filters Name=tag:Name,Values=$values \
    --query "Reservations[*].Instances[*].PublicIpAddress" --output=text
  )
}

_setip() {
    aws route53 change-resource-record-sets --hosted-zone-id $AWS_DOMAIN_ID \
    --change-batch "$(_json_a_record $fqdn $ip)"
}

_json_a_record()
{
local fqdn=$1
local ip=$2
cat <<EOF
{
  "Comment": "Update A Record",
  "Changes": [
    {
      "Action": "UPSERT",
      "ResourceRecordSet": {
        "Name": "api.$fqdn",
        "Type": "A",
        "TTL": 10,
        "ResourceRecords": [
          {
            "Value": "$ip"
          }
        ]
      }
    }
  ]
}
EOF
}

err() { echo "$@" 1>&2; }

main $@
